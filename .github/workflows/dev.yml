name: CI/CD - dev

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.image }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image meta
        id: meta
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/mundo-da-lua-home"
          echo "image=$IMAGE" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (tag: dev)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.image }}:dev
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Prepare SSH key & known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_CERT }}" > ~/.ssh/gha_deploy
          chmod 600 ~/.ssh/gha_deploy
          if [ -n "${{ secrets.KNOWN_HOSTS }}" ]; then
            echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          else
            ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
          fi

      - name: Deploy new image to Kubernetes
        env:
          HOST: ${{ secrets.SSH_HOST }}
          PORT: ${{ secrets.SSH_PORT }}
          USER: ${{ secrets.SSH_USER }}
          IMAGE: ${{ needs.build-and-push.outputs.image }}
        run: |
          ssh -i ~/.ssh/gha_deploy -o StrictHostKeyChecking=yes -p "$PORT" "$USER@$HOST" \
            "set -euo pipefail; \
             if command -v microk8s >/dev/null 2>&1; then
               if sudo -n true 2>/dev/null; then CMD='sudo -n microk8s kubectl'; else CMD='microk8s kubectl'; fi
             else
               if sudo -n true 2>/dev/null; then CMD='sudo -n kubectl'; else CMD='kubectl'; fi
             fi; \
             NS='mundo-da-lua'; DEPLOY='mundo-da-lua-home'; CONTAINER='mundo-da-lua-home'; \
             \$CMD -n \$NS set image deployment/\$DEPLOY \$CONTAINER=${IMAGE}:dev --record; \
             \$CMD -n \$NS rollout status deployment/\$DEPLOY --timeout=180s; \
             \$CMD -n \$NS get pods -l app.kubernetes.io/name=\$DEPLOY -o wide --no-headers | head -n 5 \
            "
